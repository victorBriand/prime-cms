#pragma checksum "C:\Users\Bic\Desktop\try\Views\Admin\EditPage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4451cacdc9f3a59db2ab08c9915b46fe2b39ae95"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_EditPage), @"mvc.1.0.view", @"/Views/Admin/EditPage.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Bic\Desktop\try\Views\_ViewImports.cshtml"
using WebApplicationCMS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Bic\Desktop\try\Views\_ViewImports.cshtml"
using WebApplicationCMS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4451cacdc9f3a59db2ab08c9915b46fe2b39ae95", @"/Views/Admin/EditPage.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9a9d6e4214ce63a9c3d7a104d4c16f2349c50a34", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_EditPage : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Section>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Admin", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "SavePage", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("mb-2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\Bic\Desktop\try\Views\Admin\EditPage.cshtml"
  
    Layout = "_Layout.Dashboard";
    ViewData["Title"] = "Edit Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h1>Edit Page</h1>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4451cacdc9f3a59db2ab08c9915b46fe2b39ae954640", async() => {
                WriteLiteral("\r\n    <input type=\"hidden\" name=\"title\"");
                BeginWriteAttribute("value", " value=\"", 237, "\"", 254, 1);
#nullable restore
#line 10 "C:\Users\Bic\Desktop\try\Views\Admin\EditPage.cshtml"
WriteAttributeValue("", 245, Model.ID, 245, 9, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" />\r\n    <div class=\"form-group\">\r\n        <div id=\"contentEdit\" contenteditable=\"true\" ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\">");
#nullable restore
#line 12 "C:\Users\Bic\Desktop\try\Views\Admin\EditPage.cshtml"
                                                                                                   Write(Model.ID);

#line default
#line hidden
#nullable disable
                WriteLiteral("</div>\r\n        <textarea name=\"content\" id=\"contentReceive\">");
#nullable restore
#line 13 "C:\Users\Bic\Desktop\try\Views\Admin\EditPage.cshtml"
                                                Write(Model.Content);

#line default
#line hidden
#nullable disable
                WriteLiteral("</textarea>\r\n    </div>\r\n");
                WriteLiteral("        <div class=\"text-center\">\r\n            <button type=\"submit\" id=\"addContent\" class=\"btn btn-primary\">Save</button>\r\n        </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<div class=""card container mb-2"">
    <div class=""card-body"">
        <p class=""mb-0 fs-3"">Drag the element you want into the preview screen</p>
    </div>
</div>

<div class=""card container mb-2 col-8"">
    <div id=""dragElement"" class=""card-body row"">
        <div class=""col-2"">
            <a href=""#about"" id=""drag1"" draggable=""true"" ondragstart=""drag(event)"" class=""btn btn-info scrollto""> Link button </a>
        </div>
        <div class=""col-2"">
            <h1 id=""header1"" draggable=""true"" ondragstart=""drag(event)""> Header 1 </h1>
            <h2 id=""header2"" draggable=""true"" ondragstart=""drag(event)""> Header 2 </h2>
            <h3 id=""header3"" draggable=""true"" ondragstart=""drag(event)""> Header 3 </h3>
            <h4 id=""header4"" draggable=""true"" ondragstart=""drag(event)""> Header 4 </h4>
        </div>
        <div class=""col-2"">
            <p id=""paragraphe"" class=""fs-2"" draggable=""true"" ondragstart=""drag(event)""> Paragraphe </p>
        </div>
        <div class=""col-2"">
  ");
            WriteLiteral(@"          <div id=""division"" class=""fs-2"" draggable=""true"" ondragstart=""drag(event)""> Division </div>

        </div>
    </div>
</div>
<div class=""card container mb-2 col-3"">
    <div id=""chooseColor"" class=""card-body row"">
        <p class=""mb-0 fs-3"">Choose the colour of your element</p>
        <div class=""col-1 mx-1 text-center btn btn-primary"">
            primary
        </div>
        <div class=""col-1 mx-1 text-center btn btn-secondary"">
            secondary
        </div>
        <div class=""col-1 mx-1 text-center btn btn-success"">
            success
        </div>
        <div class=""col-1 mx-1 text-center btn btn-danger"">
            danger
        </div>
        <div class=""col-1 mx-1 text-center btn btn-warning"">
            warning
        </div>
        <div class=""col-1 mx-1 text-center btn btn-info"">
            info
        </div>
        <div class=""col-1 mx-1 text-center btn btn-light"">
            light
        </div>
        <div class=""col-1 mx-1 text-cen");
            WriteLiteral("ter btn btn-dark\">\r\n            dark\r\n        </div>\r\n        <div class=\"col-1 mx-1 text-center btn btn-white btn-foreground\">\r\n            white\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"


    <script>
        //ELEMENT COLOR
        $(document).ready(function () {
            $("".colors"").click(function (e) {
                e.preventDefault();
                var colorsClass = ""bg-"" + $(this).html();
                console.log(colorsClass);
                var lastClass = $('#first').attr('class').split(' ').pop();
                $(""#first"").removeClass(lastClass);
                $(""#first"").addClass(colorsClass);
                console.log(""ok"");

            });
        });

        //DRAG AND DROP
        function allowDrop(ev) { ev.preventDefault(); }
        function drag(ev) {
            ev.dataTransfer.setData(""text/html"", ev.target.id);
        }
        function drop(ev) {
            ev.preventDefault();
            var data = ev.dataTransfer.getData(""text/html"");
            /* If you use DOM manipulation functions, their default behaviour it not to
               copy but to alter and move elements. By appending a "".cloneNode(true)"",
           ");
                WriteLiteral(@"    you will not move the original element, but create a copy. */
            for (var i = 0; i < 10; i++) {
                console.log(i);
            }
            var nodeCopy = document.getElementById(data).cloneNode(true);
            nodeCopy.id = 'newId_' + Math.random().toString(36).substr(2, 4); /* We cannot use the same ID */
            ev.target.appendChild(nodeCopy);
        }


        //CONTENT EDITOR
        var el = document.querySelector('#contentEdit')
        window.addEventListener('load', content);
        el.addEventListener('blur', content);

        function content() {
            var map = { amp: '&', lt: '<', gt: '>', quot: '""', '#039': ""'"" }
            var html = el.innerHTML.replace(/&([^;]+);/g, (m, c) => map[c]);
            el.innerHTML = html;
        }

        //INPUT TEXTAREA
        $(document).ready(function () {
            //$(""#contentEdit"").mouseleave(function (e) {
            //    e.preventDefault();
            //    var text = $(""#cont");
                WriteLiteral(@"entEdit"").html();
            //    $(""#contentReceive"").text(text);
            //    console.log(text);
            //});
            CKEDITOR.inline('contentReceive');
        });

                                    //INPUT VALUE

                                    //var ins = document.querySelector(""#ins"")
                                    //ins.addEventListener('click', function () {
                                    //    var str = document.querySelector(""#text"").value;
                                    //    console.log(str);
                                    //    document.querySelector(""#welcome"").innerHTML = str;
                                    //});
                                    //var welc = document.querySelector("".welcome"");
                                    //welc.addEventListener('click', function () {
                                    //    console.log(""ok"");
                                    //});

    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Section> Html { get; private set; }
    }
}
#pragma warning restore 1591
